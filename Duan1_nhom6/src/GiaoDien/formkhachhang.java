/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GiaoDien;

import Dao.Khachhangdao;
import Helper.DialogHelper;
import java.util.List;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import model.KhachHang;

/**
 *
 * @author lethu
 */
public class formkhachhang extends javax.swing.JInternalFrame {

    Khachhangdao khdao = new Khachhangdao();

    int row = -1;

    /**
     * Creates new form F_QuanLyKhachHang
     */
    public formkhachhang() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        FillTable();
//        rdhoatdong.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    void FillTable() {
        DefaultTableModel model = (DefaultTableModel) tblQuanLyKhacHang.getModel();
        model.setRowCount(0);
        List<KhachHang> listKH = khdao.selectAll();
        for (KhachHang x : listKH) {
            model.addRow(new Object[]{
                x.getMakh(), x.getTenkh(), x.getSDT(), x.getDiaChi(), x.isTrangThai() ? "Còn hoạt động" : "Không hoạt động"
            });
        }
    }

    void reset() {
        txtTenKH.setText("");
        txtMaKH.setText("");
        txtDiaChi.setText("");
        txtsdt.setText("");
        rdhoatdong.setSelected(true);
        row = -1;

    }

    void insert() {
        KhachHang kh = getForm();
        try {

            String dinhDangSDT = "0\\d{9}";

            if (txtTenKH.getText().trim().equals("")) {
                DialogHelper.alert(this, "Vui lòng không bỏ trông ô tên khách hàng");
                return;
            } else if (txtsdt.getText().trim().equals("")) {
                DialogHelper.alert(this, "Vui lòng không bỏ trông ô điện thoại khách hàng");
                return;
            } else if (txtDiaChi.getText().trim().equals("")) {
                DialogHelper.alert(this, "Vui lòng không bỏ trông ô địa chỉ khách hàng");
                return;
            } else if (!txtsdt.getText().matches(dinhDangSDT)) {
                DialogHelper.alert(this, "Vui lòng nhập đúng định dạng số điện thoại");
                return;
            } else if (checkTrung()) {
                DialogHelper.alert(this, "Mã khách hàng đã tồn tại");
                return;
            } else {
                khdao.insertData(kh);
                FillTable();
                reset();

                DialogHelper.alert(this, "Thêm khách hàng thành công");
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Thêm khách hàng thất bại!");
            e.printStackTrace();
        }
    }

    void setForm() {
        txtMaKH.setText(tblQuanLyKhacHang.getValueAt(row, 0) + "");
        txtTenKH.setText(tblQuanLyKhacHang.getValueAt(row, 1) + "");

        txtsdt.setText(tblQuanLyKhacHang.getValueAt(row, 2) + "");

        txtDiaChi.setText(tblQuanLyKhacHang.getValueAt(row, 3) + "");
        if (tblQuanLyKhacHang.getValueAt(row, 4).equals("Còn Hoạt Động")) {
            rdhoatdong.setSelected(true);
        }
        if (tblQuanLyKhacHang.getValueAt(row, 4).equals("Không Hoạt động")) {
            rdkhonghoatdong.setSelected(true);
        }
    }

    // tạo ra đối tượng nv mới. set dữ liệu được lấy từ textfield và trả về nv
    KhachHang getForm() {
        KhachHang kh = new KhachHang();
        String sokh = "kh" + khdao.getsokhachhang();
        kh.setMakh(sokh);

        kh.setTenkh(txtTenKH.getText());
        kh.setSDT(txtsdt.getText());
        kh.setDiaChi(txtDiaChi.getText());
        kh.setTrangThai(rdhoatdong.isSelected() ? true : false);
        return kh;
    }

    KhachHang updateForm() {
        KhachHang kh = new KhachHang();

        kh.setMakh(txtMaKH.getText());
        kh.setTenkh(txtTenKH.getText());
        kh.setSDT(txtsdt.getText());
        kh.setDiaChi(txtDiaChi.getText());
        kh.setTrangThai(rdhoatdong.isSelected() ? true : false);
        return kh;
    }

    void update() {

        KhachHang kh = updateForm();
        try {

            String dinhDangSDT = "0\\d{9}";

            if (txtTenKH.getText().trim().equals("")) {
                DialogHelper.alert(this, "Vui lòng không bỏ trông ô tên khách hàng");
                return;
            } else if (txtsdt.getText().trim().equals("")) {
                DialogHelper.alert(this, "Vui lòng không bỏ trông ô điện thoại khách hàng");
                return;
            } else if (txtDiaChi.getText().trim().equals("")) {
                DialogHelper.alert(this, "Vui lòng không bỏ trông ô địa chỉ khách hàng");
                return;
            } else if (!txtsdt.getText().matches(dinhDangSDT)) {
                DialogHelper.alert(this, "Vui lòng nhập đúng định dạng số điện thoại");
                return;
            }

            khdao.updateData(kh);
            FillTable();

            DialogHelper.alert(this, "Sửa khách hàng thành công");

        } catch (Exception e) {
            DialogHelper.alert(this, "Sửa khách hàng thất bại!");
            e.printStackTrace();
        }

    }

    void timKiem() {
        DefaultTableModel model = (DefaultTableModel) tblQuanLyKhacHang.getModel();
        model.setRowCount(0);
        List<KhachHang> listKH = khdao.selectByTimKiem(txttimkiem.getText());
        for (KhachHang x : listKH) {
            model.addRow(new Object[]{
                x.getMakh(), x.getTenkh(), x.getSDT(), x.getDiaChi(), x.isTrangThai() ? "Còn hoạt động" : "Không hoạt động"
            });
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtsdt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btninsert = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        rdhoatdong = new javax.swing.JRadioButton();
        rdkhonghoatdong = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuanLyKhacHang = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txttimkiem = new javax.swing.JTextField();

        setTitle("Quản lý khách hàng");
        setPreferredSize(new java.awt.Dimension(1228, 900));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1210, 750));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Tên khách hàng:");

        txtMaKH.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Mã khách hàng:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Số điện thoại:");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane2.setViewportView(txtDiaChi);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Địa chỉ:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Trạng thái:");

        btninsert.setBackground(new java.awt.Color(0, 204, 255));
        btninsert.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btninsert.setText("Thêm");
        btninsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertActionPerformed(evt);
            }
        });

        btnupdate.setBackground(new java.awt.Color(0, 204, 255));
        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnupdate.setText("Sửa");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 204, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("Làm mới");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdhoatdong);
        rdhoatdong.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdhoatdong.setSelected(true);
        rdhoatdong.setText("Hoạt động");

        buttonGroup1.add(rdkhonghoatdong);
        rdkhonghoatdong.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rdkhonghoatdong.setText("Không hoạt động");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(60, 60, 60))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8)
                                .addGap(72, 72, 72)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(rdhoatdong)
                                        .addGap(37, 37, 37)
                                        .addComponent(rdkhonghoatdong)
                                        .addGap(6, 191, Short.MAX_VALUE)))
                                .addGap(54, 54, 54)
                                .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btninsert)
                                .addGap(95, 95, 95)
                                .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(jButton7)
                                .addGap(253, 253, 253)))))
                .addGap(134, 134, 134))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btninsert, btnupdate, jButton7});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(rdhoatdong)
                            .addComponent(rdkhonghoatdong)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btninsert)
                    .addComponent(btnupdate)
                    .addComponent(jButton7))
                .addGap(30, 30, 30))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ KHÁCH HÀNG");

        tblQuanLyKhacHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Khách Hàng", "Tên Khách Hàng", "Số Điện Thoại", "Địa Chỉ", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuanLyKhacHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQuanLyKhacHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQuanLyKhacHang);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Tìm kiếm:");

        txttimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiemActionPerformed(evt);
            }
        });
        txttimkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttimkiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(48, 48, 48)
                .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(427, 427, 427))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1196, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btninsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btninsertActionPerformed

    private void tblQuanLyKhacHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuanLyKhacHangMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            row = tblQuanLyKhacHang.getSelectedRow();
            txtMaKH.setEditable(false);
            setForm();

        }
    }//GEN-LAST:event_tblQuanLyKhacHangMouseClicked

    private void txttimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiemActionPerformed

    private void txttimkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimkiemKeyReleased
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_txttimkiemKeyReleased
    boolean checkTrung() {
        boolean check = false;
        List<KhachHang> list = khdao.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getMakh().equalsIgnoreCase(txtMaKH.getText())) {
                check = true;
                break;
            }
        }
        return check;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btninsert;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdhoatdong;
    private javax.swing.JRadioButton rdkhonghoatdong;
    private javax.swing.JTable tblQuanLyKhacHang;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtsdt;
    private javax.swing.JTextField txttimkiem;
    // End of variables declaration//GEN-END:variables
}
