package GiaoDien;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Dao.Sukiendao;
import Helper.XDate;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import model.sukien;
import Helper.jdbcKien;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import entity.Helperduc;
import Helper.Auth;
import Helper.DialogHelper;
import java.awt.Color;
import model.HoaDon;
import Helper.checkTu;

/**
 *
 * @author LENOVO
 */
public class SuKienGiamGia extends javax.swing.JInternalFrame {

    sukien sk = new sukien();

    Sukiendao skd = new Sukiendao();
    DefaultTableModel tb_model;
    DefaultComboBoxModel cbb_Model = new DefaultComboBoxModel();
    Connection cn;
    int index = 0;
    int ud = -1;
    List<sukien> lst;

    /**
     * Creates new form SuKienGiamGia
     */
    public SuKienGiamGia() {
        initComponents();

        btsua.setEnabled(false);
//        init();
        cn = Helperduc.ketnoi("QLNOITHAT_NHOM6");
        if (cn != null) {
//            JOptionPane.showMessageDialog(this, "kết nối thành công");
        } else {
            JOptionPane.showMessageDialog(this, "kết nối thất bại");
            System.exit(0);
        }
        index = 0;
        tb_model = (DefaultTableModel) TB.getModel();
        loadtable();
        loadmasp();

    }

//    void init() {
//        lamMoiLoi();
//        model = (DefaultTableModel) TB.getModel();
//        //set radio ngày kết thúc
//        if (cothan.isSelected()) {
//            pnngay.setVisible(true);
//        } else {
//            pnngay.setVisible(false);
//        }
//        //set nut xóa sự kiện
//        if (CBB.getSelectedIndex() == 1) {
//            btxoa.setEnabled(true);
//        } else {
//            btxoa.setEnabled(false);
//        }
//        //
//        skd.loadDatatoTable(model, true);
//
//    }
    void edit() {
        String MASK = (String) TB.getValueAt(index, 0);
        sukien sk = skd.selectById(MASK);
        setForm(sk);

    }

    void setForm(sukien nh) {
        txtmask.setText(nh.getMaSuKien());
        txttensk.setText(nh.getTenSuKien());
        cothan.isSelected();
        txtngaybatdau.setText(nh.getTgBatDau());
        txtngaykt.setText(nh.getTgKetThuc());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TB = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtmask = new javax.swing.JTextField();
        txttensk = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cothan = new javax.swing.JRadioButton();
        vohan = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        errma = new javax.swing.JLabel();
        errten = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btlammoi = new javax.swing.JButton();
        btsua = new javax.swing.JButton();
        btthemsk = new javax.swing.JButton();
        btxoa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtngaykt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtngaybatdau = new javax.swing.JTextField();
        txtmasp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(176, 228, 246));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("CHƯƠNG TRÌNH GIẢM GIÁ");

        TB.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        TB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sự Kiện", "Tên Sự Kiện", "NGÀY BẮT ĐẦU", "NGÀY KẾT THÚC", "Mã Sản Phẩm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TB.setRowHeight(30);
        TB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TB);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Mã Sự Kiện");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Tên Sự Kiện");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Loại Sự Kiện");

        buttonGroup1.add(cothan);
        cothan.setSelected(true);
        cothan.setText("Có Thời Hạn");

        buttonGroup1.add(vohan);
        vohan.setText("Vô Hạn");
        vohan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vohanActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(176, 228, 246));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(176, 228, 246));
        jPanel3.setLayout(new java.awt.GridLayout(2, 2, 25, 25));

        btlammoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btlammoi.setText("Làm Mới");
        btlammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlammoiActionPerformed(evt);
            }
        });
        jPanel3.add(btlammoi);

        btsua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btsua.setText("Sửa");
        btsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsuaActionPerformed(evt);
            }
        });
        jPanel3.add(btsua);

        btthemsk.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btthemsk.setText("Thêm Sự Kiện");
        btthemsk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btthemskActionPerformed(evt);
            }
        });
        jPanel3.add(btthemsk);

        btxoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btxoa.setText("Xóa");
        btxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btxoaActionPerformed(evt);
            }
        });
        jPanel3.add(btxoa);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Ngày Kết Thúc");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Ngày Bắt Đầu");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Mã SP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(74, 74, 74)
                                                .addComponent(cothan)
                                                .addGap(29, 29, 29)
                                                .addComponent(vohan, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txttensk, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtngaykt, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(txtngaybatdau, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel6)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(txtmasp, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(58, 58, 58))
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(205, 205, 205)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(errma, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errten, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmask, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(errma, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(errten, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmask, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txttensk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cothan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vohan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtngaybatdau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtngaykt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmasp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btlammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlammoiActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "bạn muốn reset ô text ?", JOptionPane.OPTIONS_PROPERTY, JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_OPTION) {
            btsua.setEnabled(true);
            btthemsk.setEnabled(true);
            lamMoi();
        }
    }//GEN-LAST:event_btlammoiActionPerformed

    private void TBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBMouseClicked
        if (evt.getClickCount() == 2) {
            index = TB.getSelectedRow();
            showdetail();
            btsua.setEnabled(true);
        }

    }//GEN-LAST:event_TBMouseClicked

    private void btthemskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btthemskActionPerformed
//        try {
//            String sql = "insert into SUKIEN  values(?,?,?,?,?,?,?)";
//            PreparedStatement pre = cn.prepareStatement(sql);
//            pre.setString(1, txtmask.getText());
//            pre.setString(2, txttensk.getText());
//            pre.setString(3, txtud.getText());
//            pre.setString(4, txtngaybatdau.getText());
//            pre.setString(5, txtngaykt.getText());
//            String radio;
//            if (cothan.isSelected()) {
//                radio = "1";
//            } else {
//                radio = "0";
//
//            }
//            pre.setString(6, radio);
//            pre.setString(7, "1");
//            pre.executeUpdate();
//            DialogHelper.alert(this, "thêm thành công");
//            loadtable();
//            pre.close();
//
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
        int hoi = JOptionPane.showConfirmDialog(this, "Bạn muốn thêm sản phẩm chứ ?", JOptionPane.OPTIONS_PROPERTY, JOptionPane.YES_NO_OPTION);
        if (hoi == JOptionPane.YES_OPTION) {
            themsk();
        }

    }//GEN-LAST:event_btthemskActionPerformed
    boolean isValidate() {
        try {
            String dt = "0\\d{9}";
            String em = "\\w+@\\w+(\\.\\w+){1,2}";
            if (txtmask.getText().trim().equals("")) {
                DialogHelper.alert(this, "Mã sự kiện rỗng");
                return true;
            } else if (txttensk.getText().trim().equals("")) {
                DialogHelper.alert(this, "Tên sự kiện rỗng");
                return true;
            } else if (txtngaybatdau.getText().trim().equals("")) {
                DialogHelper.alert(this, "Ngày bắt đầu rỗng");
                return true;
            } else if (txtngaykt.getText().trim().equals("")) {
                DialogHelper.alert(this, "Ngày kết thúc rỗng");
                return true;

            } else if (txtmask.getText().length() > 7) {
                DialogHelper.alert(this, "Mã sự kiện tối đa 7 kí tự");
                return true;

            } else {
                XDate.toDate(txtngaybatdau.getText());
                return false;
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Vui lòng nhập đúng định dạng ngày sinh dd-MM-yyyy");
            return true;
        }
    }

    boolean isCheckTrung() {
        boolean check = false;
        List<sukien> list = skd.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getMaSuKien().equalsIgnoreCase(txtmask.getText())) {
                DialogHelper.alert(this, "Mã người học đã tồn tại");
                check = true;
                break;
            }
        }
        return check;
//    }    void xoa() {
//        try {
//            String sql = " delete from SUKIEN where MASK =?";
//            PreparedStatement pre = cn.prepareStatement(sql);
//            pre.setString(1, txtmask.getText());
//            pre.setString(2, txttensk.getText());
//            pre.setString(3, String.valueOf(uudai).toString());
//            pre.setString(4, String.valueOf(uudai).toString());
//            pre.setString(5, String.valueOf(uudai).toString());
//            pre.close();
//
//            loadtable();
//            txtmask.setText("");
//            txttensk.setText("");
//        } catch (Exception e) {
//
//        }
//
    }

    void xoa() {
        try {
            String sql = "UPDATE SUKIEN set TRANGTHAI =0 where MASK= ? and UUDAI =?";
            PreparedStatement pre = cn.prepareStatement(sql);
            pre.setString(1, "0");

            pre.setString(2, txtmask.getText());
            pre.executeUpdate();
            JOptionPane.showMessageDialog(this, "xóa thành công");
            loadtable();
            pre.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    void delete1() {
        sukien nh = getForm();
        try {
            skd.anSuKien(nh);
            loadtable();
//            clearForm();
            DialogHelper.alert(this, "Xóa thành công");
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "xÓA thất bại");
        }
    }

    void update() {
        try {
            String sql = "update SUKIEN SET TENSK =?, TGBATDAU =?,TGKETTHIC=? WHERE MASK=?";
            PreparedStatement pre = cn.prepareStatement(sql);
            pre.setString(1, txttensk.getText());
            pre.setString(2, txtngaybatdau.getText());
            pre.setString(3, txtngaykt.getText());
            pre.setString(4, txtmask.getText());

            pre.executeUpdate();
            JOptionPane.showMessageDialog(this, "update thành công");
            loadtable();

            pre.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    private void btxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btxoaActionPerformed

        delete1();

    }//GEN-LAST:event_btxoaActionPerformed

    private void btsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsuaActionPerformed
//        try {
//            String sql = "update SUKIEN SET TENSK =?, TGBATDAU =?,TGKETTHIC=? WHERE MASK=?";
//            PreparedStatement pre = cn.prepareStatement(sql);
//            pre.setString(1, txttensk.getText());
//            pre.setString(2, txtngaybatdau.getText());
//            pre.setString(3, txtngaykt.getText());
//            pre.setString(4, txtmask.getText());
//
//            pre.executeUpdate();
//            JOptionPane.showMessageDialog(this, "update thành công");
//            loadtable();
//
//            pre.close();
//        } catch (Exception e) {
//            System.out.println(e);
//        }
        int a = JOptionPane.showConfirmDialog(this, "bạn muốn update chứ!", JOptionPane.OPTIONS_PROPERTY, JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_OPTION) {
            update();
        }
    }//GEN-LAST:event_btsuaActionPerformed

    private void vohanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vohanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vohanActionPerformed
    public void luumasp() {
        try {

            skd.insert(getForm());
            DialogHelper.alert(this, "Lưu hóa đơn thành công");
            txtmasp.setEditable(false);
            txtmasp.setBackground(Color.green);

        } catch (Exception e) {
            DialogHelper.alert(this, "Lưu hóa đơn thất bại");
            e.printStackTrace();
        }
    }
//    public boolean check() {
//        int d = 0;
//        lamMoiLoi();
//        //check mã
//        if (txtmask.getText().length() == 0) {
//            errma.setText("Trống mã");
//            ++d;
//        } else {
//            sukien sk = skd.findByMaSK(txtmask.getText());
//            if (sk != null) {
//                errma.setText("Mã trùng");
//                ++d;
//            } else {
//                errma.setText("");
//            }
//        }
//        //check tên
//        if (txttensk.getText().length() == 0) {
//            errma.setText("Trống tên");
//            ++d;
//        } else {
//            sukien sk = skd.findByTenSK(txttensk.getText());
//            if (sk != null) {
//                errten.setText("Trùng tên sự kiện");
//                ++d;
//            } else {
//                errten.setText("");
//            }
//        }
//        //check giá trị ưu đãi
//        try {
//            Integer udai = (Integer) uudai.getValue();
//            if (udai < 0) {
//                JOptionPane.showMessageDialog(this, "Ưu đãi phải >=0");
//                ++d;
//                uudai.setValue(0);
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "chọn lại ưu đãi");
//            ++d;
//        }
//
//        if (cothan.isSelected()) {
//            try {
//                if (!skd.checkNgayThem(XDate.getDate())) {
//                    JOptionPane.showMessageDialog(this, "Ngày kết thúc sự kiện phải lớn hơn bằng ngày hiện tại");
//                    ++d;
//                };
//            } catch (Exception e) {
//            }
//        }
//        return d == 0 ? true : false;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TB;
    private javax.swing.JButton btlammoi;
    private javax.swing.JButton btsua;
    private javax.swing.JButton btthemsk;
    private javax.swing.JButton btxoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cothan;
    private javax.swing.JLabel errma;
    private javax.swing.JLabel errten;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtmask;
    private javax.swing.JTextField txtmasp;
    private javax.swing.JTextField txtngaybatdau;
    private javax.swing.JTextField txtngaykt;
    private javax.swing.JTextField txttensk;
    private javax.swing.JRadioButton vohan;
    // End of variables declaration//GEN-END:variables

    private void lamMoi() {
        txtmask.setEnabled(true);
        txtmask.setText(null);
        txttensk.setText(null);
        txtmask.setText(null);
        cothan.setSelected(true);

        lamMoiLoi();
    }
//    void add(){
//         
//            sukien sk = new sukien();
//            sk.setMaSuKien(txtmask.getText());
//            sk.setTenSuKien(txttensk.getText());
//            String uudai = txtud.getText();
//            sk.setUuDai(ud);
//            try {
//                if (cothan.isSelected()) {
////                    sk.setTgKetThuc(ChuyenDoi.chuyenDoiNgayVeString1(jdateNgayKT.getDate()));
//                    sk.setLoaiSuKien(true);
//                    skd.insertSuKien(sk, true);
//                } else {
//
//                    skd.insertSuKien(sk, false);
//                }
//                JOptionPane.showMessageDialog(this, "Thêm thành công");
//                if (CBB.getSelectedIndex() == 1) {
//                    btxoa.setEnabled(true);
//                    skd.loadDatatoTable(tb_model, false);
//                } else {
//                    btxoa.setEnabled(false);
//                    skd.loadDatatoTable(tb_model, true);
//                }
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(this, "Thêm lỗi");
//            }
//        ;
//    }

    public void lamMoiLoi() {
        errma.setText("");
        errten.setText("");
        txtngaybatdau.setText("");
        txtngaykt.setText("");
        txtmasp.setText("");
    }

//    private void LoadComBoBox() {
//               try {
//         
//            String sql ="select * from SUKIEN";
//            PreparedStatement pre =cn.prepareStatement(sql);
//            //thi hành
//            ResultSet rs = pre.executeQuery();
//            //duyệt rs đổ vào combobox
//            while (rs.next()) {                
//                String mask = rs.getString(1);
//                String tensk = rs.getString(2);
//                 String uudai = rs.getString(3);
//                String ngaybd = rs.getString(4);
//                String ngaykt = rs.getString(5);
//                String lsk = rs.getString(6);
//               cbb_Model.addElement(new sukien(mask, tensk, uudai, ngaybd, ngaykt, lsk));
//            }
//            rs.close();
//            pre.close();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "lỗi combobox");
//        }
//    }
//    private void loadcombobox() {
//        try {
//            sukien sk = (sukien) CBB.getSelectedItem();
//            String sql = " select * from SUKIEN";
//            Statement stm = cn.createStatement();
//
//            ResultSet rs = stm.executeQuery(sql);
//            while (rs.next()) {
//                Boolean trangthai = rs.getBoolean(1);
//                cbb_Model.addElement(trangthai);
//
//            }
//            rs.close();
//            stm.close();
//        } catch (Exception e) {
//        }
//
//    }
    private void showdetail() {
        txtmask.setText(TB.getValueAt(index, 0).toString());
        txttensk.setText(TB.getValueAt(index, 1).toString());

        txtngaybatdau.setText(TB.getValueAt(index, 2).toString());
        txtngaykt.setText(TB.getValueAt(index, 3).toString());
        txtmasp.setText(TB.getValueAt(index, 4).toString());

        TB.setRowSelectionInterval(index, index);
    }

    void sua() {
        String manh = (String) TB.getValueAt(index, 0);
        sukien nh = skd.selectById(manh);
        setForm(nh);
//        tabs.setSelectedIndex(0);
//        updateStatus();
    }

    void themsk() {
        try {
            sukien sk = new sukien();

            String sql = "insert into SUKIEN  values(?,?,?,?,?,?,?)";
            PreparedStatement pre = cn.prepareStatement(sql);
            pre.setString(1, txtmask.getText());
            pre.setString(2, txttensk.getText());
            pre.setString(3, txtngaybatdau.getText());
            pre.setString(4, txtngaykt.getText());
            String radio;
            if (cothan.isSelected()) {
                radio = "1";
            } else {
                radio = "0";

            }
            pre.setString(5, radio);
            pre.setString(6, "1");
            pre.setString(7, txtmasp.getText());

            pre.executeUpdate();
            DialogHelper.alert(this, "thêm thành công");
            loadtable();
            pre.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadtable() {
        try {

            String sql = "select * from SUKIEN where TRANGTHAI=1";
            Statement stm = cn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            tb_model.setRowCount(0);
            while (rs.next()) {
                String tt = rs.getString(5);
                String mask = rs.getString(1);
                String tensk = rs.getString(2);
                String ngaybd = rs.getString(3);
                String ngaykt = rs.getString(4);
                String masp = rs.getString(7);
//             
                tb_model.addRow(new Object[]{
                    mask, tensk, ngaybd, ngaykt, masp
                });
            }
            rs.close();
            stm.close();
        } catch (Exception e) {
        }
    }

//    private void DoVaoDanhSachSP() {
//        LoaiSP lsp = (LoaiSP) model_cbbLoaiSP.getSelectedItem();
//        System.out.println(lsp.getMaLoaiSP());
//
//        List<SanPham> list = daoSP.selectAll_4(lsp.getMaLoaiSP());
//        model_SP.setRowCount(0);
//        int sk = 1;
//
//        for (SanPham x : list) {
//            model_SP.addRow(new Object[]{sk, x.getMaCTSP(), x.getTenSP(), x.getTenKichThuoc(), x.getTenMauSac(), x.getTenChatLieu(),
//                x.getGia(), true});
//            sk++;
//        }
//
//    }
    void load() {

        tb_model = (DefaultTableModel) TB.getModel();
        tb_model.setRowCount(0);
        try {
            List<sukien> sk = skd.loadDatatoTable(tb_model, 1);
            for (sukien x : sk) {
                tb_model.addRow(new Object[]{
                    x.getMaSuKien(), x.getTenSuKien(), x.getUuDai(), x.getTgBatDau(), x.getTgKetThuc()
                });
            }
        } catch (Exception e) {
        }
    }

    void delete() {
        String manh = txtmask.getText();

        try {
            if (DialogHelper.confirm(this, "Bạn thực sự muốn xóa ?")) {
                skd.delete(manh);
                loadtable();

                DialogHelper.alert(this, "Xóa thành công");
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Xóa thất bại");
        }

    }

    void insert() {
        sukien nh = getForm();
        try {
            skd.insert(nh);
            loadtable();
//            clearForm();
            DialogHelper.alert(this, "Thêm thành công");
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Thêm thất bại");
        }
    }

    sukien getForm() {
        sukien nh = new sukien();
        nh.setMaSuKien(txtmask.getText());
        nh.setTenSuKien(txttensk.getText());

        nh.setTgBatDau(txtngaybatdau.getText());
        nh.setTgKetThuc(txtngaykt.getText());

        return nh;
    }

    void loadtt() {
        try {

            String sql = " select MASK,TENSK,UUDAI,TGBATDAU,TGKETTHIC,TRANGTHAI\n"
                    + " from SUKIEN";
            Statement stm = cn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            tb_model.setRowCount(0);
            while (rs.next()) {
                String mask = rs.getString(1);
                String tensk = rs.getString(2);
                String uudai = rs.getString(3);
                String ngaybd = rs.getString(4);
                String ngaykt = rs.getString(5);
//                String lsk = rs.getString(6);
                tb_model.addRow(new Object[]{
                    mask, tensk, uudai, ngaybd, ngaykt
                });
            }
            rs.close();
            stm.close();
        } catch (Exception e) {
        }
    }

    private void loadmasp() {

        try {
            String sql = "select SANPHAM.MASP from SANPHAM wHERE TRANGTHAI=1";
            PreparedStatement pre = cn.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            while (rs.next()) {

                String msp = rs.getString(1);
                txtmasp.setText(msp);

            }
        } catch (SQLException ex) {

        }

    }

}
