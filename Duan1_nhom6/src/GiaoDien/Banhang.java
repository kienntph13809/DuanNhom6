/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GiaoDien;

import Dao.BanHangDao;
import Dao.HoaDonChiTietDao;
import Dao.HoaDonDAO;
import Dao.SanPhamDao;
import Helper.Auth;
import Helper.DialogHelper;
import Helper.Sharehelper;
import Helper.XDate;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.DanhMuc;
import model.HoaDon;
import model.HoaDonChiTiet;
import model.KhachHang;
import model.Sanpham;
import entity.Helperduc;
import java.sql.Connection;

/**
 *
 * @author Admin
 */
public class Banhang extends javax.swing.JInternalFrame {

    /**
     * Creates new form Banhang
     */
    DefaultTableModel model1;
    DefaultTableModel model2;
    DefaultTableModel model3;
    Connection cn;

    BanHangDao daobh = new BanHangDao();
    Dao.DanhMuc daoDm = new Dao.DanhMuc();
    HoaDonDAO daohd = new HoaDonDAO();
    HoaDonChiTietDao daohdct = new HoaDonChiTietDao();
    SanPhamDao daosp = new SanPhamDao();
    int row1 = -1;
    int row2 = -1;
    int row3 = -1;

    public Banhang() {

        initComponents();
        model1 = (DefaultTableModel) tblSP.getModel();
        model2 = (DefaultTableModel) tbnbanhang.getModel();
        model3 = (DefaultTableModel) tblHoaDon.getModel();
        fillCboDanhMuc();
        showHoaDonCho();
        lblTenNV.setText(Auth.user.getTentk());
        
    }

    public String dinhDangTien(float so) {
        NumberFormat fomatter = new DecimalFormat("############");
        return fomatter.format(so);
    }

    public void fillCboDanhMuc() {
        cbxDanhMuc.addItem("");
        List<DanhMuc> list = daoDm.selectListDanhMuc();
        for (int i = 0; i < list.size(); i++) {
            cbxDanhMuc.addItem(list.get(i).getTendm());
        }
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblSP.getModel();
        model.setRowCount(0);
        List<Sanpham> list = daosp.getListSanPham();
        for (Sanpham x : list) {
            model.addRow(new Object[]{
                x.getMasp(), x.getTensp(), x.getSoluong(), x.getChatlieu(), x.getDongia(), x.getMota()
            });
        }
    }

    public void showProductsDM() {

        if (cbxDanhMuc.getSelectedIndex() == 0) {
            fillTable();
        }
        if (cbxDanhMuc.getSelectedIndex() > 0) {
            model1.setRowCount(0);

            List<Sanpham> list = daobh.spBm_SP(cbxDanhMuc.getSelectedItem() + "");
            for (Sanpham x : list) {
                model1.addRow(new Object[]{
                    x.getMasp(), x.getTensp(), x.getSoluong(), x.getChatlieu(), x.getDongia(), x.getMota()
                });
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        txtsoluong = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        AddGioHang = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbnbanhang = new javax.swing.JTable();
        btnXoaSP = new javax.swing.JButton();
        btnXoaAll = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnAddHD = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblGiamGia = new javax.swing.JLabel();
        lbnhanvienbh = new javax.swing.JLabel();
        lblTenNV = new javax.swing.JLabel();
        btnthanhtoan = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtMaHd = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbtienthanhtoan = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnADDSP = new javax.swing.JButton();
        cbxDanhMuc = new javax.swing.JComboBox<>();

        jLabel13.setText("VND");

        jButton1.setBackground(new java.awt.Color(107, 70, 52));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cập nhập");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setPreferredSize(new java.awt.Dimension(1210, 780));

        jPanel2.setBackground(new java.awt.Color(176, 228, 246));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bán Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 24))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(1150, 660));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Giỏ Hàng"));

        tbnbanhang.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbnbanhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SẢN PHẨM", "TÊN SẢN PHẨM", "Đơn Giá", "Số Lương", "Giảm Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbnbanhang);

        btnXoaSP.setText("Xóa SP");
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        btnXoaAll.setText("Xóa All");
        btnXoaAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaSP)
                    .addComponent(btnXoaAll))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnXoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnXoaAll, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa Đơn"));

        tblHoaDon.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Nhân Viên Bán", "Ngày Bán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(0).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(1).setResizable(false);
            tblHoaDon.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Mã khách hàng");

        btnAddHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnAddHD.setText("+");
        btnAddHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHDActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Tên Khách hàng");

        txtMaKH.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMaKHCaretUpdate(evt);
            }
        });

        txtTenKH.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaKH))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenKH)))
                .addGap(7, 7, 7)
                .addComponent(btnAddHD)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddHD, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setText("Mã Hóa Đơn :");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setText("Tổng Tiền :");

        lblTongTien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTongTien.setText("0");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel8.setText("Được Gỉảm");

        lblGiamGia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblGiamGia.setText("...............");

        lbnhanvienbh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lbnhanvienbh.setText("Nhân viên bán hàng:");

        lblTenNV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTenNV.setText("................................");

        btnthanhtoan.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnthanhtoan.setText("Thanh Toán");
        btnthanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthanhtoanActionPerformed(evt);
            }
        });

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Ghi Chú");

        jButton2.setText("Cập Nhật Hóa Đơn");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Làm Mới");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("+");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText(".VNĐ");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setText("Tiền phải thanh toán");

        lbtienthanhtoan.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText(".VNĐ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText(".VNĐ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(20, 20, 20)))
                                    .addGap(26, 26, 26)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(txtMaHd, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel4Layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addComponent(jButton2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbnhanvienbh, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel3))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(lbtienthanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblTenNV))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnthanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaHd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTongTien)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblGiamGia)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbnhanvienbh)
                    .addComponent(lblTenNV))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbtienthanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnthanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sản Phẩm"));

        tblSP.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "TÊN SẢN PHẨM", "SỐ LƯỢNG", "Chất Liệu", "Đơn Giá", "Mô Tả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblSP);

        jLabel1.setText("Danh Mục :");

        btnADDSP.setText("Thêm SP");
        btnADDSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDSPActionPerformed(evt);
            }
        });

        cbxDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxDanhMucItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnADDSP))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnADDSP)
                    .addComponent(cbxDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddGioHang)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AddGioHang)
                        .addGap(518, 518, 518))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(53, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnthanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthanhtoanActionPerformed
        // TODO add your handling code here:
        //  DialogHelper.alert(this, "Đã TT");
        thanhToan();
    }//GEN-LAST:event_btnthanhtoanActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtMaKHCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMaKHCaretUpdate
        // TODO add your handling code here:
        Timkh();
    }//GEN-LAST:event_txtMaKHCaretUpdate

    private void cbxDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxDanhMucItemStateChanged
        // TODO add your handling code here:
        showProductsDM();
    }//GEN-LAST:event_cbxDanhMucItemStateChanged

    private void btnADDSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDSPActionPerformed
        // TODO add your handling code here:
        themSanPham();
    }//GEN-LAST:event_btnADDSPActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        // TODO add your handling code here:
        xoaSanPham();
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void btnXoaAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaAllActionPerformed
        // TODO add your handling code here:
        xoaTatCa();
    }//GEN-LAST:event_btnXoaAllActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        lamMoi();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        luuHoaDon();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if (txtMaHd.getText().equals("")) {
                DialogHelper.alert(this, "Vui lòng chọn hóa đơn trước khi cập nhật hóa đơn");
            } else {
                capNhatHoaDon();
                DialogHelper.alert(this, "Cập nhật hóa đơn thành công!");
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Cập nhật hóa đơn thất bại");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        clickHoaDonCho();
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnAddHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddHDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddGioHang;
    private javax.swing.JButton btnADDSP;
    private javax.swing.JButton btnAddHD;
    private javax.swing.JButton btnXoaAll;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JButton btnthanhtoan;
    private javax.swing.JComboBox<String> cbxDanhMuc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblGiamGia;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lbnhanvienbh;
    private javax.swing.JLabel lbtienthanhtoan;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblSP;
    private javax.swing.JTable tbnbanhang;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtMaHd;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtsoluong;
    // End of variables declaration//GEN-END:variables
//void LoadataToComBo() {
//        DefaultComboBoxModel model = (DefaultComboBoxModel) cboHTT.getModel();
//        model.removeAllElements();
//        try {
//            List<Sanpham> list = daobh.selectListSanPham();
//            for (Sanpham x : list) {
//
//                cboHTT.addItem(x.getTensp());
//            }
//        } catch (Exception e) {
//            //DialogHelper.alert(this, "lõi truy vấn combobox danh Mục");
//            System.out.println(e);
//        }
//    }
    HoaDon getForm() {
        String soHd = "HD0" + daobh.getSoHD();

        HoaDon hd = new HoaDon();
        hd.setMahd(soHd);
        hd.setTentk(lblTenNV.getText());
        hd.setMakh(txtMaKH.getText());
        hd.setTrangThai(false);
        hd.setTongTien(Float.parseFloat(lblTongTien.getText()));
        hd.setGhichu(txtGhiChu.getText());
        return hd;
    }

    HoaDon getformcn() {
        HoaDon hd = new HoaDon();
        hd.setMahd(txtMaHd.getText());
        hd.setTentk(lblTenNV.getText());
        hd.setMakh(txtMaKH.getText());
        hd.setTrangThai(false);
        hd.setTongTien(Float.parseFloat(lblTongTien.getText()));
        hd.setGhichu(txtGhiChu.getText());
        return hd;
    }

    public boolean checkTrungMaHD(String x) {
        boolean check = false;
        List<HoaDon> list = daohd.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getMahd().equals(x)) {
                check = true;
                break;
            }
        }
        return check;
    }

    public void luuHoaDon() {
        try {

            daohd.insert(getForm());
            DialogHelper.alert(this, "Lưu hóa đơn thành công");
            txtMaHd.setEditable(false);

        } catch (Exception e) {
            DialogHelper.alert(this, "Lưu hóa đơn thất bại");
            e.printStackTrace();
        }
        showHoaDonCho();
    }

    public void donHang() {
        float tongTien = 0;
        float giamgia5 = 0;
        float giamgia10 = 0;
        float tienthanhtoan =0;
        float phantram =0;

        int soDong = tbnbanhang.getRowCount();
        if (soDong == 0) {
            lblTongTien.setText("0");
            lblGiamGia.setText("0");

        } else {
            for (int i = 0; i < tbnbanhang.getRowCount(); i++) {
                float donGia = Float.parseFloat(tbnbanhang.getValueAt(i, 2) + "");
                int soLuong = Integer.parseInt(tbnbanhang.getValueAt(i, 3) + "");
                tongTien += (float) (soLuong * donGia);
                lblTongTien.setText(this.dinhDangTien(tongTien));
                if (tongTien < 5000000) {
                    giamgia5 += (float) (tongTien / 100 * 5);
                    tienthanhtoan+=(float)(tongTien-giamgia5) ;
//                    phantram+=(float) (tongTien/);
                    lblGiamGia.setText(this.dinhDangTien(giamgia5));
                    lbtienthanhtoan.setText(this.dinhDangTien(tienthanhtoan));
                    
                } else {
                    giamgia10 += (float) (tongTien / 100 * 10);
                     tienthanhtoan+=(float)(tongTien-giamgia10);
                    lblGiamGia.setText(this.dinhDangTien(giamgia10));
                     lbtienthanhtoan.setText(this.dinhDangTien(tienthanhtoan));
                }

            }

        }
    }

    void duocgiam() {
        float tongtien = Float.valueOf(lblTongTien.getText());
        float giamgia = Float.valueOf(lblGiamGia.getText());
        float thanhtoan = Float.valueOf(lbtienthanhtoan.getText());
        if (tongtien < 2000000) {
            giamgia += (float) (tongtien / 100 * 5);
            lblGiamGia.setText(this.dinhDangTien(giamgia));
        } else if (tongtien >= 2000000) {
            giamgia += (float) (tongtien / 100 * 10);
            lblGiamGia.setText(this.dinhDangTien(giamgia));
        }
    }
//    void HoaDonCTT(){
//        HoaDon hd = new HoaDon();
//        hd.setMasp((tblSP.getValueAt(row1, 0)));
//        hd.setTongTien(Float.parseFloat(lblTongTien.getText()));
//    }

    public void themSanPham() {
        row1 = tblSP.getSelectedRow();
        row3 = tblHoaDon.getSelectedRow();
        try {
            if (row3 < 0) {
                DialogHelper.alert(this, "Vui lòng chọn hóa đơn chờ\nNếu chưa có vui lòng tạo!");
            } else if (row1 < 0) {
                DialogHelper.alert(this, "Vui lòng chọn sản phẩm!");
            } else {
                String soluong = DialogHelper.prompt(this, "số lượng sản phẩm:");
                if (Integer.parseInt(soluong) > Integer.parseInt(tblSP.getValueAt(row1, 2) + "")) {
                    DialogHelper.alert(this, "Số lượng sản phẩm bạn vừa nhập vượt quá số lượng trong kho!");
                    return;
                } else if (Integer.parseInt(soluong) < 0) {
                    DialogHelper.alert(this, "Số lượng sản phẩm không được nhỏ hơn 0!");
                    return;
                } else {

                    Vector v = new Vector();
                    v.add(tblSP.getValueAt(row1, 0));
                    v.add(tblSP.getValueAt(row1, 1));
                    v.add(tblSP.getValueAt(row1, 4));
                    v.add(soluong);
                    model2.addRow(v);
                    donHang();

                    //           daohd.updateHD();
                }
            }
        } catch (NumberFormatException e) {
            DialogHelper.alert(this, "Số lượng sản phẩm phải là số nguyên");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void xoaSanPham() {
        row2 = tbnbanhang.getSelectedRow();
        try {
            if (row2 < 0) {
                DialogHelper.alert(this, "Vui lòng chọn sản phẩm để xóa!");
                return;
            } else {
                if (DialogHelper.confirm(this, "Bạn chắc chắn muốn xóa sản phẩm này khỏi danh sách đã chọn?")) {
                    model2.removeRow(row2);
                    donHang();
                    DialogHelper.alert(this, "Xóa sản phẩm thành công");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Xóa sản phẩm thất bại");
        }
    }

    public void xoaTatCa() {
        try {
            if (DialogHelper.confirm(this, "Bạn chắc chắn muốn xóa hết tất cả sản phẩm này khỏi danh sách đã chọn ?")) {
                model2.setRowCount(0);
                donHang();
                DialogHelper.alert(this, "Xóa tất cả sản phẩm thành công");
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Xóa tất cả sản phẩm thất bại");
        }
    }

    public void xoaHD() {
        row3 = tbnbanhang.getSelectedRow();
        try {
            if (row2 < 0) {
                DialogHelper.alert(this, "Vui lòng chọn sản phẩm để xóa!");
                return;
            } else {
                if (DialogHelper.confirm(this, "Bạn chắc chắn muốn xóa sản phẩm này khỏi danh sách đã chọn?")) {
                    model2.removeRow(row2);
                    donHang();
                    DialogHelper.alert(this, "Xóa sản phẩm thành công");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Xóa sản phẩm thất bại");
        }
    }

    public void showHoaDonCho() {
        model3.setRowCount(0);
        List<HoaDon> list = daohd.selectByHDChoThanhToan();
        for (HoaDon x : list) {
            model3.addRow(new Object[]{
                x.getMahd(), x.getTentk(), XDate.toString(x.getNgaylap())
            });
        }
    }

    public void capNhatHoaDon() {
        HoaDon hd = getForm();
        daohd.update(hd);
        daohdct.delete(txtMaHd.getText());
        for (int i = 0; i < tbnbanhang.getRowCount(); i++) {
            //Tạo đối tượng hóa đơn chi tiết và add vào đối tượng để thêm vào vào hóa đơn chi tiết
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setMahd(txtMaHd.getText());
            hdct.setMaSP(tbnbanhang.getValueAt(i, 0) + "");
            hdct.setDongia(Float.parseFloat(tbnbanhang.getValueAt(i, 2) + ""));
            hdct.setSoluong(Integer.parseInt(tbnbanhang.getValueAt(i, 3) + ""));
            hdct.setThanhtien(Float.parseFloat(lblTongTien.getText()));
            hdct.setTrangthai(true);
            //Thêm từng hóa đơn chi tiết theo điều kiện i
            daohdct.insert(hdct);
        }

    }

    void Timkh() {
        try {
            String hoten = "";
            List<KhachHang> list = daobh.FindbyKhachHang(txtMaKH.getText());
            for (KhachHang x : list) {
                hoten = x.getTenkh();
            }
            txtTenKH.setText(hoten);
        } catch (Exception e) {
        }

    }

    public void lamMoi() {
        model2.setRowCount(0);
        txtMaHd.setText("");
        lblGiamGia.setText("");
        txtMaKH.setText("");
        lblTongTien.setText("0");
        lblGiamGia.setText("0");
        txtTenKH.setText("");

        row2 = -1;
    }

    public void thanhToan() {
        HoaDon hd = new HoaDon();
        hd.setMahd(txtMaHd.getText());
        hd.setTrangThai(true);
        hd.setTongTien(Float.parseFloat(lblTongTien.getText()));
        hd.setGhichu(txtGhiChu.getText());
        try {
            if (txtMaHd.getText().equals("")) {
                DialogHelper.alert(this, "Vui lòng chọn hóa đơ trước khi thanh toán");
                return;
            } else if (tbnbanhang.getRowCount() == 0) {
                DialogHelper.alert(this, "Vui lòng chọn sản phẩm trước khi nhấn thanh toán");
                return;
            } else {
                if (tbnbanhang.getRowCount() > 0) {
                    try {
                        capNhatHoaDon();
                    } catch (Exception e) {
                        e.printStackTrace();
                        return;
                    }
                }
                daohd.update(hd);
                for (int i = 0; i < tbnbanhang.getRowCount(); i++) {
                    //Tạo đối tượng sản phẩm chi tết để lấy ra số lượng tồn dựa vào sanphamchitietService
                    Sanpham s = daosp.findByMaSp_sp(tbnbanhang.getValueAt(i, 0) + "");
                    //Tạo biến int lưu lại số lượng còn lại trong kho khi đã bán ra 
                    int soLuongMoi = (s.getSoluong() - Integer.parseInt(tbnbanhang.getValueAt(i, 3) + ""));

                    //Thực hiện update số lượng trong bảng sản phẩm
                    Sanpham sp = new Sanpham();
                    sp.setSoluong(soLuongMoi);
                    sp.setMasp(tbnbanhang.getValueAt(i, 0) + "");
                    daosp.updateBanHang(sp);
                }

                showHoaDonCho();
                showProductsDM();
                lamMoi();
                DialogHelper.alert(this, "Thanh toán thành công!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Thanh toán thất bại");
        }

    }

    public void clickHoaDonCho() {
        row3 = tblHoaDon.getSelectedRow();
        txtMaHd.setText(tblHoaDon.getValueAt(row3, 0) + "");
        try {
            HoaDon hd = daohd.selectById(txtMaHd.getText());
            //txtMaKH.setText(hd.getMakh());
//            lblTongTien.setText(hd.getTongTien() + "");

            model2.setRowCount(0);
            List<HoaDonChiTiet> list = daohdct.selectById(txtMaHd.getText());
            for (HoaDonChiTiet x : list) {
                model2.addRow(new Object[]{
                    x.getMaSP(), x.getDongia(), x.getSoluong()
                });
            }
            txtMaHd.setEditable(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void loadgiamtien() {
        try {

            String sql = " SELECT 	CASE\n"
                    + "\n"
                    + "			WHEN  DONGIA BETWEEN 0 AND 2500000 THEN DONGIA /100* 5\n"
                    + "			WHEN DONGIA BETWEEN 25000000 AND 3000000 THEN (DONGIA /100) *10\n"
                    + "			WHEN DONGIA BETWEEN 3000001 AND 5000000 THEN (DONGIA /100)* 15\n"
                    + "			ELSE (DONGIA /100)*20\n"
                    + "		END AS DUOCGIAM\n"
                    + "\n"
                    + "FROM SANPHAM";
            Statement stm = cn.createStatement();
            ResultSet rs = stm.executeQuery(sql);

            while (rs.next()) {
                String gg = rs.getString(lblGiamGia.getText());

            }
            rs.close();
            stm.close();
        } catch (Exception e) {
        }

    }
}
