/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GiaoDien;

import Dao.HoaDonChiTietDao;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.HoaDonChiTiet;
import model.Sanpham;

/**
 *
 * @author kien5
 */
public class ThongKe extends javax.swing.JInternalFrame {

    /**
     * Creates new form ThongKe
     */
    HoaDonChiTietDao daohdct = new HoaDonChiTietDao();
    public ThongKe() {
        initComponents();
    }
      public void chon() {
        String chonK = (String) cblDs.getSelectedItem();
        if (chonK.equalsIgnoreCase("Mã sản phẩm theo tháng")) {
            this.thongKe1();
        }
        if (chonK.trim().equalsIgnoreCase("Doanh thu tất cả sản phẩm theo tháng")) {
          //  this.thongKe2();
        }
        if (chonK.trim().equalsIgnoreCase("Doanh thu tất cả sản phẩm theo năm")) {
          //  this.thongke3();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();
        cblDs = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(176, 228, 246));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THỐNG KÊ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 28))); // NOI18N

        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "MASP", "Ten SP", "Thời Gian(Tháng/Năm)", "Doanh Thu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblThongKe);
        if (tblThongKe.getColumnModel().getColumnCount() > 0) {
            tblThongKe.getColumnModel().getColumn(0).setResizable(false);
            tblThongKe.getColumnModel().getColumn(1).setResizable(false);
            tblThongKe.getColumnModel().getColumn(2).setResizable(false);
            tblThongKe.getColumnModel().getColumn(3).setResizable(false);
        }

        cblDs.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cblDs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã sản phẩm theo tháng", "Doanh thu tất cả sản phẩm theo tháng", "Doanh thu tất cả sản phẩm theo năm" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1143, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cblDs, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 46, Short.MAX_VALUE)
                .addComponent(cblDs, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cblDs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblThongKe;
    // End of variables declaration//GEN-END:variables

    private void thongKe1() {
        String a;
        int index = 0;
          DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
         model.setRowCount(0);
            try {
            List<HoaDonChiTiet> list = daohdct.selectTHONGKE();
            for (HoaDonChiTiet x : list) {
                if (x.getTrangthai() == false) {
                    a = "Hết Hàng";

                } else {
                    a = "Còn Hàng";
                }
             
                Object[] row = {
                    index++,
                    x.getMaSP(),
                    x.getTensp(),
                    x.getThanhtien(),
                    
                    a

                };
                model.addRow(row);
            }
        } catch (Exception e) {
            throw new RuntimeException(e);

        }
    }
    }

